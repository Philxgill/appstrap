export AWS_DEFAULT_REGION="us-east-1"

#                    --menu text height width menu-height [ tag item ] 
environment=$( dialog  \
    --backtitle "MajorTom Cloud Control" \
    --menu "☼ choose an environment" 15 80 15 \
    pkgsrc	"use pkgsrc/appstrap" \
    pkgsrc+	"use pkgsrc with /opt/aws in front" \
    ansible	"use ansible virtualenv" \
    batch	"PDF batch job control" \
    system	"Default Amazon Linux AMI environment" \
    2>&1 > /dev/tty )
    # ^^ http://sgros.blogspot.com/2012/02/error-cannot-open-tty-output.html

if [[ $(curl --silent http://169.254.169.254/latest/meta-data/public-ipv4) ==  "54.225.112.8" ]]; then 
    on="$(tput setab 3; tput setaf 1 ; tput bold )"
    off="$(tput sgr0)"
    pipestatus() {
        local statuses=${PIPESTATUS[*]}
        local exitcode=$(echo \"${statuses// /+}\" | bc)
        if [[ $exitcode -ne 0 ]]; then
            echo "${on}${statuses}${off} "
        fi
    }
    export PS1="[$environment ʍτ \W] \$(pipestatus)\$ "
fi

shopt -s checkwinsize
shopt -s histappend

case $environment in 
    "pkgsrc" )
    . ~/appstrap/setenv.sh
    ;;
    "pkgsrc+" )
    . ~/appstrap/setenv.sh
    export PATH="/opt/aws/bin:$PATH"
    ;;
    "ansible" )
    . ~/appstrap/setenv.sh
    . ~/appstrap/ansible-virtualenv/bin/activate
    ;;
    * )
    if [[ -n ${_ENVIRONMENT} ]]; then # try to clean up
        # deactivate and virtualenv
        type deactivate &>/dev/null && deactivate    # http://www.cyberciti.biz/faq/bash-shell-scripting-find-out-if-function-definedornot/
        export PATH="/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/aws/bin:$HOME/bin"
        unset MANPATH
    fi
    # Source global definitions
    if [ -f /etc/bashrc ]; then
	. /etc/bashrc
    fi
    ;;
esac
export _ENVIRONMENT=$environment

user=$(who -m | awk '{ print $1 }')
bashrc="$HOME/.bashrc-$user"
if [ -e $bashrc ]; then
  . "$bashrc"
  message="$(tput dim)~/.bashrc-$user sourced $(tput sgr0)"
else
  message="$(tput bold)please create ~/.bashrc-$user $(tput sgr0)"
fi 
echo "$environment ⥌ $message"
uptime
