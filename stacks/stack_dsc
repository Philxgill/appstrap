#!/usr/bin/env bash

if [[ -n "$DEBUG" ]]; then 
  set -x
fi

set -o pipefail  # trace ERR through pipes
set -o errtrace  # trace ERR through 'time command' and other functions
set -o nounset   ## set -u : exit the script if you try to use an uninitialised variable
set -o errexit   ## set -e : exit the script if any statement returns a non-true return value

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" # http://stackoverflow.com/questions/59895
cd $DIR

. stack_run.sh

. ../setenv.sh
set +u
. ~/python/bin/activate 
set -u

which pip
stack_run_batch  "pip install" dsc.pip.txt

which cpanm
if [[ $(perl -I ~/perl5/lib/perl5 -Mlocal::lib -e ';') ]]
  then
    cpanm --local-lib=~/perl5 local::lib
fi

set +u
eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
set -u

stack_run_batch "cpanm" dsc.cpanm.txt
# ./monit_binary
# install File::List "by hand"
